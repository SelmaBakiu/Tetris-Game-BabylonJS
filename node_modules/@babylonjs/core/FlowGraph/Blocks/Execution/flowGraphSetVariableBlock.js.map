{"version":3,"file":"flowGraphSetVariableBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAGvE,OAAO,EAAE,iCAAiC,EAAE,MAAM,yCAAyC,CAAC;AAM5F;;;GAGG;AACH,MAAM,OAAO,yBAA6B,SAAQ,iCAAiC;IAU/E,YAAY,MAA+C;QACvD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,MAAK,SAAS,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC;SACjD;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC3D,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,MAAK,SAAS,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SACnC;IACL,CAAC;IAEM,QAAQ,CAAC,OAAyB;QACrC,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9D,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;CACJ","sourcesContent":["import { RichTypeString, RichTypeAny } from \"../../flowGraphRichTypes\";\r\nimport type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { FlowGraphWithOnDoneExecutionBlock } from \"../../flowGraphWithOnDoneExecutionBlock\";\r\n\r\nexport interface IFlowGraphSetVariableBlockParameter<T> {\r\n    variableName?: string;\r\n    input?: T;\r\n}\r\n/**\r\n * Block to set a variable.\r\n * @experimental\r\n */\r\nexport class FlowGraphSetVariableBlock<T> extends FlowGraphWithOnDoneExecutionBlock {\r\n    /**\r\n     * Input connection: The name of the variable to set.\r\n     */\r\n    public readonly variableName: FlowGraphDataConnection<string>;\r\n    /**\r\n     * Input connection: The value to set on the variable.\r\n     */\r\n    public readonly input: FlowGraphDataConnection<T>;\r\n\r\n    constructor(params?: IFlowGraphSetVariableBlockParameter<T>) {\r\n        super();\r\n\r\n        this.variableName = this._registerDataInput(\"variableName\", RichTypeString);\r\n        if (params?.variableName !== undefined) {\r\n            this.variableName.value = params.variableName;\r\n        }\r\n        this.input = this._registerDataInput(\"input\", RichTypeAny);\r\n        if (params?.input !== undefined) {\r\n            this.input.value = params.input;\r\n        }\r\n    }\r\n\r\n    public _execute(context: FlowGraphContext): void {\r\n        const variableNameValue = this.variableName.getValue(context);\r\n        context.setVariable(variableNameValue, this.input.getValue(context));\r\n        this.onDone._activateSignal(context);\r\n    }\r\n}\r\n"]}