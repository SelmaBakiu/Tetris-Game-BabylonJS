import { RichTypeString, RichTypeAny } from "../../flowGraphRichTypes.js";
import { FlowGraphWithOnDoneExecutionBlock } from "../../flowGraphWithOnDoneExecutionBlock.js";
/**
 * Block to set a variable.
 * @experimental
 */
export class FlowGraphSetVariableBlock extends FlowGraphWithOnDoneExecutionBlock {
    constructor(params) {
        super();
        this.variableName = this._registerDataInput("variableName", RichTypeString);
        if ((params === null || params === void 0 ? void 0 : params.variableName) !== undefined) {
            this.variableName.value = params.variableName;
        }
        this.input = this._registerDataInput("input", RichTypeAny);
        if ((params === null || params === void 0 ? void 0 : params.input) !== undefined) {
            this.input.value = params.input;
        }
    }
    _execute(context) {
        const variableNameValue = this.variableName.getValue(context);
        context.setVariable(variableNameValue, this.input.getValue(context));
        this.onDone._activateSignal(context);
    }
}
//# sourceMappingURL=flowGraphSetVariableBlock.js.map