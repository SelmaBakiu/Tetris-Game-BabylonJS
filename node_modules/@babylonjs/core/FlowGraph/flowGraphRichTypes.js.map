{"version":3,"file":"flowGraphRichTypes.js","sourceRoot":"","sources":["../../../../dev/core/src/FlowGraph/flowGraphRichTypes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AACzE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAmBrD,MAAM,CAAC,MAAM,WAAW,GAAkB;IACtC,QAAQ,EAAE,KAAK;IACf,mBAAmB,EAAE,GAAG,EAAE,CAAC,SAAS;CACvC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAqB;IAC5C,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,GAAG,EAAE,CAAC,EAAE;CAChC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAqB;IAC5C,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,GAAG,EAAE,CAAC,CAAC;CAC/B,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAsB;IAC9C,QAAQ,EAAE,SAAS;IACnB,mBAAmB,EAAE,GAAG,EAAE,CAAC,KAAK;CACnC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAsB;IAC9C,QAAQ,EAAE,SAAS;IACnB,mBAAmB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;CAC5C,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAsB;IAC9C,QAAQ,EAAE,SAAS;IACnB,mBAAmB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;CAC5C,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAsB;IAC9C,QAAQ,EAAE,SAAS;IACnB,mBAAmB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;CAC5C,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAqB;IAC5C,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE;CAC/C,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAqB;IAC5C,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;CAC5C,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAqB;IAC5C,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,GAAG,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CACpD,CAAC","sourcesContent":["import { Vector2, Vector3, Vector4, Matrix } from \"../Maths/math.vector\";\r\nimport { Color3, Color4 } from \"../Maths/math.color\";\r\n\r\n/**\r\n * A rich type represents extra information about a type,\r\n * such as its name and a default value constructor.\r\n * @experimental\r\n */\r\nexport interface RichType<T> {\r\n    /**\r\n     * Name of the type\r\n     */\r\n    typeName: string;\r\n    /**\r\n     * Constructor for the default value\r\n     * @returns the default value\r\n     */\r\n    defaultValueBuilder: () => T;\r\n}\r\n\r\nexport const RichTypeAny: RichType<any> = {\r\n    typeName: \"any\",\r\n    defaultValueBuilder: () => undefined,\r\n};\r\n\r\nexport const RichTypeString: RichType<string> = {\r\n    typeName: \"string\",\r\n    defaultValueBuilder: () => \"\",\r\n};\r\n\r\nexport const RichTypeNumber: RichType<number> = {\r\n    typeName: \"number\",\r\n    defaultValueBuilder: () => 0,\r\n};\r\n\r\nexport const RichTypeBoolean: RichType<boolean> = {\r\n    typeName: \"boolean\",\r\n    defaultValueBuilder: () => false,\r\n};\r\n\r\nexport const RichTypeVector2: RichType<Vector2> = {\r\n    typeName: \"Vector2\",\r\n    defaultValueBuilder: () => Vector2.Zero(),\r\n};\r\n\r\nexport const RichTypeVector3: RichType<Vector3> = {\r\n    typeName: \"Vector3\",\r\n    defaultValueBuilder: () => Vector3.Zero(),\r\n};\r\n\r\nexport const RichTypeVector4: RichType<Vector4> = {\r\n    typeName: \"Vector4\",\r\n    defaultValueBuilder: () => Vector4.Zero(),\r\n};\r\n\r\nexport const RichTypeMatrix: RichType<Matrix> = {\r\n    typeName: \"Matrix\",\r\n    defaultValueBuilder: () => Matrix.Identity(),\r\n};\r\n\r\nexport const RichTypeColor3: RichType<Color3> = {\r\n    typeName: \"Color3\",\r\n    defaultValueBuilder: () => Color3.Black(),\r\n};\r\n\r\nexport const RichTypeColor4: RichType<Color4> = {\r\n    typeName: \"Color4\",\r\n    defaultValueBuilder: () => new Color4(0, 0, 0, 0),\r\n};\r\n"]}